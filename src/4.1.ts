/**

roman

День начинался как обычно. Вы шли по улице и вдруг увидели яркую вспышку света. 
Из облака дыма с рёвом появился странный автомобиль с не менее странными пассажирами. 
«Мы наконец-то нашли тебя! Я Док Браун, в машине мой друг Марти. 
Срочно, весь мир в опасности! Мы отправляемся в Древний Рим, и только ты можешь усовершенствовать мою машину времени. 
Нет времени объяснять, судьба человечества на кону», — водитель выскочил и побежал к вам с ноутбуком наперевес.

Настал ваш звёздный час. Напишите функцию roman для обработки римских и арабских цифр. 
Функция принимает в качестве аргумента число, записанное римскими или арабскими цифрами. 
Затем:
- определяет, использованы ли римские или арабские цифры;
- арабские преобразует в римские, а римские — в арабские;
- возвращает результат преобразования.

Функция должна сообщить о трёх видах ошибок:
- TYPE_ERROR — если в аргументе не строка и не число;
- RANGE_ERROR — если число выходит за диапазон от 1 до 3999;
- UNKNOWN_SYMBOLS — если аргумент содержит данные, которые не могут быть обработаны. Например, знаки пунктуации, неподходящие буквы латиницы или NaN.
*/

/**
 * @description error codes
 * @type {string}
 */
const TYPE_ERROR = "Unsupported input value type";
const RANGE_ERROR = "Input value must be [1; 3999]";
const UNKNOWN_SYMBOLS = "Unknown input symbols";

/**
 * @description validate input values and determinate needed convert solution
 * @param {string|number} number
 * @returns {string|number}
 */
const roman = (number: number | string): number | string => {
  // Код
  return "";
};

export default roman;
